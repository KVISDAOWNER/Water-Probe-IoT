{
  "openapi" : "3.0.2",
  "info" : {
    "contact" : {
      "email" : "sw708e19@gmail.com",
      "name" : "OpenWeatherMap API"
    },
    "description" : "API for waterprobing",
    "license" : {
      "name" : "CC Attribution-ShareAlike 4.0 (CC BY-SA 4.0)",
      "url" : "https://openweathermap.org/price"
    },
    "termsOfService" : "https://openweathermap.org/terms",
    "title" : "waterprobing",
    "version" : "1"
  },
  "servers" : [ {
    "description" : "Production server",
    "url" : "https://api.openweathermap.org/data/2.5/"
  }, {
    "description" : "Beta server",
    "url" : "http://beta.api.openweathermap.org/data/2.5/"
  }, {
    "description" : "Some other server",
    "url" : "http://some-other.api.openweathermap.org/data/2.5/"
  } ],
  "paths" : {
    "/Thing" : {
      "delete" : {
        "description" : "desc",
        "operationId" : "deleteThing",
        "parameters" : [ {
          "description" : "Unique thingName",
          "explode" : true,
          "in" : "query",
          "name" : "thingname",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sample"
                }
              }
            },
            "description" : "Successful response"
          },
          "404" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "title" : "Thing not cretead",
                  "type" : "string"
                }
              }
            },
            "description" : "Not created response"
          }
        },
        "summary" : "Delete an existing probe",
        "tags" : [ "Thing" ]
      },
      "get" : {
        "description" : "desc",
        "operationId" : "getThing",
        "parameters" : [ {
          "description" : "Unique thingName",
          "explode" : true,
          "in" : "query",
          "name" : "thingname",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sample"
                }
              }
            },
            "description" : "Successful response"
          },
          "404" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "title" : "Thing not cretead",
                  "type" : "string"
                }
              }
            },
            "description" : "Not created response"
          }
        },
        "summary" : "Get an existing probe",
        "tags" : [ "Thing" ]
      },
      "post" : {
        "description" : "Creates new thing",
        "operationId" : "NewThing",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/thing"
              }
            }
          },
          "description" : "Optional properties represented as json for the Thing",
          "required" : true
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sample"
                }
              }
            },
            "description" : "Successful response"
          },
          "404" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "title" : "Thing not cretead",
                  "type" : "string"
                }
              }
            },
            "description" : "Not created response"
          }
        },
        "summary" : "Creates a new probe",
        "tags" : [ "Thing" ]
      }
    },
    "/Observation" : {
      "get" : {
        "operationId" : "getObservation",
        "parameters" : [ {
          "description" : "Unique observationName",
          "explode" : true,
          "in" : "query",
          "name" : "observationName",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sample"
                }
              }
            },
            "description" : "Successful response"
          },
          "404" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "title" : "Thing not cretead",
                  "type" : "string"
                }
              }
            },
            "description" : "Not created response"
          }
        },
        "summary" : "Call to write observation to database",
        "tags" : [ "Observation" ]
      },
      "post" : {
        "operationId" : "postObservation",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/observation"
              }
            }
          },
          "description" : "Optional properties represented as json for the Thing",
          "required" : true
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sample"
                }
              }
            },
            "description" : "Successful response"
          },
          "404" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "title" : "Thing not cretead",
                  "type" : "string"
                }
              }
            },
            "description" : "Not created response"
          }
        },
        "summary" : "Call to write observation to database",
        "tags" : [ "Observation" ]
      }
    },
    "/dataStream" : {
      "delete" : {
        "operationId" : "deleteDatastream",
        "parameters" : [ {
          "description" : "Unique dataStreamName",
          "explode" : true,
          "in" : "query",
          "name" : "dataStreamName",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sample"
                }
              }
            },
            "description" : "Successful response"
          },
          "404" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "title" : "Thing not cretead",
                  "type" : "string"
                }
              }
            },
            "description" : "Not created response"
          }
        },
        "summary" : "deletes a datastream",
        "tags" : [ "Datastream" ]
      },
      "get" : {
        "operationId" : "getDatastream",
        "parameters" : [ {
          "description" : "Unique dataStreamName",
          "explode" : true,
          "in" : "query",
          "name" : "dataStreamName",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sample"
                }
              }
            },
            "description" : "Successful response"
          },
          "404" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "title" : "Thing not cretead",
                  "type" : "string"
                }
              }
            },
            "description" : "Not created response"
          }
        },
        "summary" : "Gets a datastream",
        "tags" : [ "Datastream" ]
      },
      "post" : {
        "operationId" : "postDatastream",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/dataStream"
              }
            }
          },
          "description" : "Optional properties represented as json for the dataStream",
          "required" : true
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sample"
                }
              }
            },
            "description" : "Successful response"
          },
          "404" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "title" : "Thing not cretead",
                  "type" : "string"
                }
              }
            },
            "description" : "Not created response"
          }
        },
        "summary" : "posts a datastream",
        "tags" : [ "Datastream" ]
      },
      "put" : {
        "operationId" : "putDatastream",
        "parameters" : [ {
          "description" : "Unique dataStreamName",
          "explode" : true,
          "in" : "query",
          "name" : "dataStreamName",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/dataStream"
              }
            }
          },
          "description" : "Optional properties represented as json for the dataStream",
          "required" : true
        },
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sample"
                }
              }
            },
            "description" : "Successful response"
          },
          "404" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "title" : "Thing not cretead",
                  "type" : "string"
                }
              }
            },
            "description" : "Not created response"
          }
        },
        "summary" : "put to a datastream",
        "tags" : [ "Datastream" ]
      }
    },
    "/sensor" : {
      "delete" : {
        "operationId" : "deleteSensor",
        "parameters" : [ {
          "description" : "Unique sensorName",
          "explode" : true,
          "in" : "query",
          "name" : "sensorName",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sample"
                }
              }
            },
            "description" : "Successful response"
          },
          "404" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "title" : "Thing not cretead",
                  "type" : "string"
                }
              }
            },
            "description" : "Not created response"
          }
        },
        "summary" : "deletes a sensor",
        "tags" : [ "Sensor" ]
      },
      "get" : {
        "operationId" : "getSensor",
        "parameters" : [ {
          "description" : "Unique sensorName",
          "explode" : true,
          "in" : "query",
          "name" : "sensorName",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sample"
                }
              }
            },
            "description" : "Successful response"
          },
          "404" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "title" : "Thing not cretead",
                  "type" : "string"
                }
              }
            },
            "description" : "Not created response"
          }
        },
        "summary" : "gets a sensor",
        "tags" : [ "Sensor" ]
      },
      "post" : {
        "operationId" : "postSensor",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/sensor"
              }
            }
          },
          "description" : "Optional properties represented as json for the dataStream",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sample"
                }
              }
            },
            "description" : "Successful response"
          },
          "404" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "title" : "Thing not cretead",
                  "type" : "string"
                }
              }
            },
            "description" : "Not created response"
          }
        },
        "summary" : "post a sensor",
        "tags" : [ "Sensor" ]
      },
      "put" : {
        "operationId" : "putSensor",
        "parameters" : [ {
          "description" : "Unique sensorName",
          "explode" : true,
          "in" : "query",
          "name" : "sensorName",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/sensor"
              }
            }
          },
          "description" : "Optional properties represented as json for the dataStream",
          "required" : true
        },
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sample"
                }
              }
            },
            "description" : "Successful response"
          },
          "404" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "title" : "Thing not cretead",
                  "type" : "string"
                }
              }
            },
            "description" : "Not created response"
          }
        },
        "summary" : "puts a sensor",
        "tags" : [ "Sensor" ]
      }
    },
    "/Location" : {
      "get" : {
        "operationId" : "getLocation",
        "parameters" : [ {
          "description" : "Unique locationName",
          "explode" : true,
          "in" : "query",
          "name" : "locationName",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sample"
                }
              }
            },
            "description" : "Successful response"
          },
          "404" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "title" : "Thing not cretead",
                  "type" : "string"
                }
              }
            },
            "description" : "Not created response"
          }
        },
        "summary" : "gets a location",
        "tags" : [ "location" ]
      },
      "post" : {
        "operationId" : "postlocation",
        "parameters" : [ {
          "description" : "Unique locationName",
          "explode" : true,
          "in" : "query",
          "name" : "locationName",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        } ],
        "responses" : {
          "201" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Sample"
                }
              }
            },
            "description" : "Successful response"
          },
          "404" : {
            "content" : {
              "text/plain" : {
                "schema" : {
                  "title" : "Thing not cretead",
                  "type" : "string"
                }
              }
            },
            "description" : "Not created response"
          }
        },
        "summary" : "posting a new location",
        "tags" : [ "location" ]
      }
    }
  },
  "components" : {
    "parameters" : {
      "observation" : {
        "description" : "Unique observationName",
        "explode" : true,
        "in" : "query",
        "name" : "observationName",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "dataStream" : {
        "description" : "Unique dataStreamName",
        "explode" : true,
        "in" : "query",
        "name" : "dataStreamName",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "sensor" : {
        "description" : "Unique sensorName",
        "explode" : true,
        "in" : "query",
        "name" : "sensorName",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "thingname" : {
        "description" : "Unique thingName",
        "explode" : true,
        "in" : "query",
        "name" : "thingname",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "location" : {
        "description" : "Unique locationName",
        "explode" : true,
        "in" : "query",
        "name" : "locationName",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      }
    },
    "responses" : {
      "200" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Sample"
            }
          }
        },
        "description" : "Successful response"
      },
      "201" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/Sample"
            }
          }
        },
        "description" : "Successful response"
      },
      "404" : {
        "content" : {
          "text/plain" : {
            "schema" : {
              "title" : "Thing not cretead",
              "type" : "string"
            }
          }
        },
        "description" : "Not created response"
      }
    },
    "schemas" : {
      "tmObject" : {
        "properties" : {
          "time" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "dqElement" : {
        "type" : "object"
      },
      "tmInstant" : {
        "properties" : {
          "time" : {
            "type" : "string"
          }
        },
        "type" : "object"
      },
      "tmPeriod" : {
        "type" : "object"
      },
      "namedValue" : {
        "type" : "object"
      },
      "valueCode" : {
        "type" : "object"
      },
      "gm_envelope" : {
        "type" : "object"
      },
      "thing" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "properties" : {
            "items" : {
              "type" : "object"
            },
            "type" : "array"
          }
        },
        "required" : [ "description", "name" ],
        "type" : "object"
      },
      "observation" : {
        "properties" : {
          "phenomenonTime" : {
            "$ref" : "#/components/schemas/tmObject"
          },
          "resultTime" : {
            "$ref" : "#/components/schemas/tmInstant"
          },
          "result" : {
            "type" : "number"
          },
          "resultQuality" : {
            "items" : {
              "$ref" : "#/components/schemas/dqElement"
            },
            "type" : "array"
          },
          "validTime" : {
            "items" : {
              "$ref" : "#/components/schemas/tmPeriod"
            },
            "type" : "array"
          },
          "parameters" : {
            "items" : {
              "$ref" : "#/components/schemas/namedValue"
            },
            "type" : "array"
          }
        },
        "required" : [ "phenomenonTime", "result", "resultTime" ],
        "type" : "object"
      },
      "dataStream" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "observationType" : {
            "type" : "object"
          },
          "observedArea" : {
            "type" : "object"
          },
          "phenomenonTime" : {
            "type" : "object"
          },
          "resultTime" : {
            "type" : "object"
          }
        },
        "required" : [ "description", "name", "observationType", "unitOfMeasurement" ],
        "type" : "object"
      },
      "sensor" : {
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "encodingType" : {
            "type" : "object"
          },
          "metaData" : {
            "type" : "object"
          }
        },
        "required" : [ "description", "encodingType", "metaData", "name" ],
        "type" : "object"
      },
      "Sample" : {
        "example" : {
          "placeholder" : "placeholder"
        },
        "properties" : {
          "placeholder" : {
            "description" : "Placeholder description",
            "type" : "string"
          }
        }
      }
    }
  }
}
