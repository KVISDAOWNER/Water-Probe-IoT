/*
 * WaterProbe API
 *
 * API for waterprobing
 *
 * The version of the OpenAPI document: 1
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Mvc;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using Newtonsoft.Json;
using System.ComponentModel.DataAnnotations;
using SensorThingsAPI.Attributes;
using Microsoft.AspNetCore.Authorization;
using SensorThingsAPI.Models;

namespace SensorThingsAPI.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public class ObservedPropertyApiController : ControllerBase
    { 
        /// <summary>
        /// Deletes an ObservedProperty
        /// </summary>
        /// <param name="observedPropertyName">Unique ObservedProperty name</param>
        /// <response code="200">Successful response</response>
        /// <response code="404">Not created response</response>
        [HttpDelete]
        [Route("/ObservedProperty")]
        [ValidateModelState]
        [SwaggerOperation("DeleteObservedProperty")]
        [SwaggerResponse(statusCode: 200, type: typeof(Sample), description: "Successful response")]
        [SwaggerResponse(statusCode: 404, type: typeof(string), description: "Not created response")]
        public virtual IActionResult DeleteObservedProperty([FromQuery]string observedPropertyName)
        { 

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Sample));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(string));
            string exampleJson = null;
            exampleJson = "{\r\n  \"placeholder\" : \"placeholder\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Sample>(exampleJson)
            : default(Sample);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// gets an ObservedProperty
        /// </summary>
        /// <param name="observedPropertyName">Unique ObservedProperty name</param>
        /// <response code="200">Successful response</response>
        /// <response code="404">Not created response</response>
        [HttpGet]
        [Route("/ObservedProperty")]
        [ValidateModelState]
        [SwaggerOperation("GetObservedProperty")]
        [SwaggerResponse(statusCode: 200, type: typeof(Sample), description: "Successful response")]
        [SwaggerResponse(statusCode: 404, type: typeof(string), description: "Not created response")]
        public virtual IActionResult GetObservedProperty([FromQuery]string observedPropertyName)
        { 

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Sample));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(string));
            string exampleJson = null;
            exampleJson = "{\r\n  \"placeholder\" : \"placeholder\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Sample>(exampleJson)
            : default(Sample);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// Creates a new ObservedProperty
        /// </summary>
        /// <param name="observedProperty"></param>
        /// <response code="201">Successful response</response>
        /// <response code="404">Not created response</response>
        [HttpPost]
        [Route("/ObservedProperty")]
        [ValidateModelState]
        [SwaggerOperation("PostObservedProperty")]
        [SwaggerResponse(statusCode: 201, type: typeof(Sample), description: "Successful response")]
        [SwaggerResponse(statusCode: 404, type: typeof(string), description: "Not created response")]
        public virtual IActionResult PostObservedProperty([FromBody]ObservedProperty observedProperty)
        { 

            //TODO: Uncomment the next line to return response 201 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(201, default(Sample));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(string));
            string exampleJson = null;
            exampleJson = "{\r\n  \"placeholder\" : \"placeholder\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Sample>(exampleJson)
            : default(Sample);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }

        /// <summary>
        /// updates an ObservedProperty
        /// </summary>
        /// <param name="observedProperty"></param>
        /// <response code="200">Successful response</response>
        /// <response code="404">Not created response</response>
        [HttpPut]
        [Route("/ObservedProperty")]
        [ValidateModelState]
        [SwaggerOperation("PutObservedProperty")]
        [SwaggerResponse(statusCode: 200, type: typeof(Sample), description: "Successful response")]
        [SwaggerResponse(statusCode: 404, type: typeof(string), description: "Not created response")]
        public virtual IActionResult PutObservedProperty([FromBody]ObservedProperty observedProperty)
        { 

            //TODO: Uncomment the next line to return response 200 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(200, default(Sample));
            //TODO: Uncomment the next line to return response 404 or use other options such as return this.NotFound(), return this.BadRequest(..), ...
            // return StatusCode(404, default(string));
            string exampleJson = null;
            exampleJson = "{\r\n  \"placeholder\" : \"placeholder\"\r\n}";
            
            var example = exampleJson != null
            ? JsonConvert.DeserializeObject<Sample>(exampleJson)
            : default(Sample);
            //TODO: Change the data returned
            return new ObjectResult(example);
        }
    }
}
